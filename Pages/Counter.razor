@page "/counter"
@using PolarisBlazor.Workflow
@inject IJSRuntime Js

<h1>Counter</h1>
@_markup.ToString()
<hr/>
<div>Id = @Id</div>
<div>Value = @Value</div>
<hr/>
<p>Current count: @_currentCount.ToString()</p>
<input @bind="@FirstName" />
<hr/>
<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<button class="btn btn-warning" @onclick="GotoStart">Home</button>

@code {
    private int _currentCount;
    MarkupString _markup;
    private string _firstName;

    [Parameter]
    public string Id { get; set; }
    
    [Parameter]
    public string Value { get; set; }

    private string FirstName {
        get => _firstName;
        set {
            _firstName = value;
            InvokeAsync(FirstNameValueChanged);
        }
    }

    protected override async Task OnInitializedAsync() {
        var user = await Js.Model().GetValue("user.details.firstName");
        FirstName = user;
        
        _markup = new MarkupString($"<em>Hallo {user}</em>");
    }

    private void IncrementCount() => _currentCount++;

    private async Task FirstNameValueChanged() =>
        await Js.Model().SetValue("user.details.firstName", _firstName);

    private async Task GotoStart() =>
        await Js.Workflow().GotoAsync("start");
}